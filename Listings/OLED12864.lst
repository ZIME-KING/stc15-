C51 COMPILER V9.60.0.0   OLED12864                                                         05/17/2020 19:06:56 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED12864
OBJECT MODULE PLACED IN OLED12864.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lib\Src\OLED12864.c COMPACT OPTIMIZE(8,SPEED) INCDIR(.\lib\Inc;.\user;.\
                    -user) DEBUG OBJECTEXTEND PRINT(.\Listings\OLED12864.lst) TABS(2) OBJECT(OLED12864.obj)

line level    source

   1          #include "main.h"
   2          
   3          //OLED的显存
   4          //存放格式如下.
   5          //[0]0 1 2 3 ... 127
   6          //[1]0 1 2 3 ... 127
   7          //[2]0 1 2 3 ... 127
   8          //[3]0 1 2 3 ... 127
   9          //[4]0 1 2 3 ... 127
  10          //[5]0 1 2 3 ... 127
  11          //[6]0 1 2 3 ... 127
  12          //[7]0 1 2 3 ... 127
  13          /*
  14          void delay_ms(unsigned int ms)
  15          {
  16            unsigned int a;
  17            while(ms)
  18            {
  19              a=1800;
  20              while(a--);
  21              ms--;
  22            }
  23            return;
  24          }
  25          */
  26          /**********************************************
  27          //IIC Start
  28          **********************************************/
  29          void IIC_Start()
  30          {
  31   1      
  32   1          OLED_SCLK_Set() ;
  33   1          OLED_SDIN_Set();
  34   1          OLED_SDIN_Clr();
  35   1          OLED_SCLK_Clr();
  36   1      }
  37          
  38          /**********************************************
  39          //IIC Stop
  40          **********************************************/
  41          void IIC_Stop()
  42          {
  43   1          OLED_SCLK_Set() ;
  44   1      //  OLED_SCLK_Clr();
  45   1          OLED_SDIN_Clr();
  46   1          OLED_SDIN_Set();
  47   1      
  48   1      }
  49          
  50          void IIC_Wait_Ack()
  51          {
  52   1      
  53   1          //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
  54   1          //GPIOB->CRH |= 0x00080000;
C51 COMPILER V9.60.0.0   OLED12864                                                         05/17/2020 19:06:56 PAGE 2   

  55   1      //  OLED_SDA = 1;
  56   1      //  delay_us(1);
  57   1          //OLED_SCL = 1;
  58   1          //delay_us(50000);
  59   1          /*  while(1)
  60   1            {
  61   1              if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  62   1              {
  63   1                //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  64   1                //GPIOB->CRH |= 0x00030000;
  65   1                return;
  66   1              }
  67   1            }
  68   1          */
  69   1          OLED_SCLK_Set() ;
  70   1          OLED_SCLK_Clr();
  71   1      }
  72          /**********************************************
  73          // IIC Write byte
  74          **********************************************/
  75          
  76          void Write_IIC_Byte(unsigned char IIC_Byte)
  77          {
  78   1          unsigned char i;
  79   1          unsigned char m,da;
  80   1          da=IIC_Byte;
  81   1          OLED_SCLK_Clr();
  82   1          for(i=0; i<8; i++)
  83   1          {
  84   2              m=da;
  85   2              //  OLED_SCLK_Clr();
  86   2              m=m&0x80;
  87   2              if(m==0x80)
  88   2              {
  89   3                  OLED_SDIN_Set();
  90   3              }
  91   2              else OLED_SDIN_Clr();
  92   2              da=da<<1;
  93   2              OLED_SCLK_Set();
  94   2              OLED_SCLK_Clr();
  95   2          }
  96   1      
  97   1      
  98   1      }
  99          /**********************************************
 100          // IIC Write Command
 101          **********************************************/
 102          void Write_IIC_Command(unsigned char IIC_Command)
 103          {
 104   1          IIC_Start();
 105   1          Write_IIC_Byte(0x78);            //Slave address,SA0=0
 106   1          IIC_Wait_Ack();
 107   1          Write_IIC_Byte(0x00);     //write command
 108   1          IIC_Wait_Ack();
 109   1          Write_IIC_Byte(IIC_Command);
 110   1          IIC_Wait_Ack();
 111   1          IIC_Stop();
 112   1      }
 113          /**********************************************
 114          // IIC Write Data
 115          **********************************************/
 116          void Write_IIC_Data(unsigned char IIC_Data)
C51 COMPILER V9.60.0.0   OLED12864                                                         05/17/2020 19:06:56 PAGE 3   

 117          {
 118   1          IIC_Start();
 119   1          Write_IIC_Byte(0x78);     //D/C#=0; R/W#=0
 120   1          IIC_Wait_Ack();
 121   1          Write_IIC_Byte(0x40);     //write data
 122   1          IIC_Wait_Ack();
 123   1          Write_IIC_Byte(IIC_Data);
 124   1          IIC_Wait_Ack();
 125   1          IIC_Stop();
 126   1      }
 127          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 128          {
 129   1          if(cmd)
 130   1          {
 131   2      
 132   2              Write_IIC_Data(dat);
 133   2      
 134   2          }
 135   1          else {
 136   2              Write_IIC_Command(dat);
 137   2      
 138   2          }
 139   1      
 140   1      
 141   1      }
 142          
 143          /********************************************
 144          // fill_Picture
 145          ********************************************/
 146          void fill_picture(unsigned char fill_Data)
 147          {
 148   1          unsigned char m,n;
 149   1          for(m=0; m<8; m++)
 150   1          {
 151   2              OLED_WR_Byte(0xb0+m,0);   //page0-page1
 152   2              OLED_WR_Byte(0x00,0);   //low column start address
 153   2              OLED_WR_Byte(0x10,0);   //high column start address
 154   2              for(n=0; n<128; n++)
 155   2              {
 156   3                  OLED_WR_Byte(fill_Data,1);
 157   3              }
 158   2          }
 159   1      }
 160          
 161          //坐标设置
 162          
 163          void OLED_Set_Pos(unsigned char x, unsigned char y)
 164          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
 165   1          OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 166   1          OLED_WR_Byte((x&0x0f),OLED_CMD);
 167   1      }
 168          //开启OLED显示
 169          void OLED_Display_On(void)
 170          {
 171   1          OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 172   1          OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 173   1          OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 174   1      }
 175          //关闭OLED显示
 176          void OLED_Display_Off(void)
 177          {
 178   1          OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
C51 COMPILER V9.60.0.0   OLED12864                                                         05/17/2020 19:06:56 PAGE 4   

 179   1          OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 180   1          OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 181   1      }
 182          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!
 183          void OLED_Clear(void)
 184          {
 185   1          u8 i,n;
 186   1          for(i=0; i<8; i++)
 187   1          {
 188   2              OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 189   2              OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 190   2              OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址
 191   2              for(n=0; n<128; n++)OLED_WR_Byte(0,OLED_DATA);
 192   2          } //更新显示
 193   1      }
 194          void OLED_On(void)
 195          {
 196   1          u8 i,n;
 197   1          for(i=0; i<8; i++)
 198   1          {
 199   2              OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 200   2              OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 201   2              OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址
 202   2              for(n=0; n<128; n++)OLED_WR_Byte(1,OLED_DATA);
 203   2          } //更新显示
 204   1      }
 205          //在指定位置显示一个字符,包括部分字符
 206          //x:0~127
 207          //y:0~63
 208          //mode:0,反白显示;1,正常显示
 209          //size:选择字体 16/12
 210          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 211          {
 212   1          unsigned char c=0,i=0;
 213   1          c=chr-' ';//得到偏移后的值
 214   1          if(x>Max_Column-1) {
 215   2              x=0;
 216   2              y=y+2;
 217   2          }
 218   1          if(Char_Size ==16)
 219   1          {
 220   2              OLED_Set_Pos(x,y);
 221   2              for(i=0; i<8; i++)
 222   2                  OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 223   2              OLED_Set_Pos(x,y+1);
 224   2              for(i=0; i<8; i++)
 225   2                  OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 226   2          }
 227   1          else {
 228   2              OLED_Set_Pos(x,y);
 229   2              for(i=0; i<6; i++)
 230   2                  OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 231   2      
 232   2          }
 233   1      }
 234          //m^n函数
 235          u32 oled_pow(u8 m,u8 n)
 236          {
 237   1          u32 result=1;
 238   1          while(n--)result*=m;
 239   1          return result;
 240   1      }
C51 COMPILER V9.60.0.0   OLED12864                                                         05/17/2020 19:06:56 PAGE 5   

 241          //显示2个数字
 242          //x,y :起点坐标
 243          //len :数字的位数
 244          //size:字体大小
 245          //mode:模式 0,填充模式;1,叠加模式
 246          //num:数值(0~4294967295);
 247          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 248          {
 249   1          u8 t,temp;
 250   1          u8 enshow=0;
 251   1          for(t=0; t<len; t++)
 252   1          {
 253   2              temp=(num/oled_pow(10,len-t-1))%10;
 254   2              if(enshow==0&&t<(len-1))
 255   2              {
 256   3                  if(temp==0)
 257   3                  {
 258   4                      OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 259   4                      continue;
 260   4                  } else enshow=1;
 261   3      
 262   3              }
 263   2              OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2);
 264   2          }
 265   1      }
 266          //显示一个字符号串
 267          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 268          {
 269   1          unsigned char j=0;
 270   1          while (chr[j]!='\0')
 271   1          {   OLED_ShowChar(x,y,chr[j],Char_Size);
 272   2              x+=8;
 273   2              if(x>120) {
 274   3                  x=0;
 275   3                  y+=2;
 276   3              }
 277   2              j++;
 278   2          }
 279   1      }
 280          //显示汉字
 281          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 282          {
 283   1          u8 t,adder=0;
 284   1          OLED_Set_Pos(x,y);
 285   1          for(t=0; t<16; t++)
 286   1          {
 287   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 288   2              adder+=1;
 289   2          }
 290   1          OLED_Set_Pos(x,y+1);
 291   1          for(t=0; t<16; t++)
 292   1          {
 293   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 294   2              adder+=1;
 295   2          }
 296   1      }
 297          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 298          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 299          {
 300   1          unsigned int j=0;
C51 COMPILER V9.60.0.0   OLED12864                                                         05/17/2020 19:06:56 PAGE 6   

 301   1          unsigned char x,y;
 302   1      
 303   1          if(y1%8==0) y=y1/8;
 304   1          else y=y1/8+1;
 305   1          for(y=y0; y<y1; y++)
 306   1          {
 307   2              OLED_Set_Pos(x0,y);
 308   2              for(x=x0; x<x1; x++)
 309   2              {
 310   3                  OLED_WR_Byte(BMP[j++],OLED_DATA);
 311   3              }
 312   2          }
 313   1      }
 314          
 315          //初始化SSD1306
 316          void OLED_Init(void)
 317          {
 318   1      
 319   1          OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 320   1          OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 321   1          OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 322   1          OLED_WR_Byte(0x40,OLED_CMD);//--set start line address
 323   1          OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 324   1          OLED_WR_Byte(0x81,OLED_CMD); // contract control
 325   1          OLED_WR_Byte(0xFF,OLED_CMD);//--128
 326   1          OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap  0xa0左右反置 0xa1正常
 327   1          OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 328   1          OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 329   1          OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 330   1          OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction 0xc0上下反置 0xc8正常
 331   1          OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 332   1          OLED_WR_Byte(0x00,OLED_CMD);//
 333   1      
 334   1          OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 335   1          OLED_WR_Byte(0x80,OLED_CMD);//
 336   1      
 337   1          OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 338   1          OLED_WR_Byte(0x05,OLED_CMD);//
 339   1      
 340   1          OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 341   1          OLED_WR_Byte(0xF1,OLED_CMD);//
 342   1      
 343   1          OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 344   1          OLED_WR_Byte(0x12,OLED_CMD);//
 345   1      
 346   1          OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 347   1          OLED_WR_Byte(0x30,OLED_CMD);//
 348   1      
 349   1          OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 350   1          OLED_WR_Byte(0x14,OLED_CMD);//
 351   1      
 352   1          OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 353   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1425    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      41
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   OLED12864                                                         05/17/2020 19:06:56 PAGE 7   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
