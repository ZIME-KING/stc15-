C51 COMPILER V9.60.0.0   KEY_FINAL_VERSION                                                 05/17/2020 19:06:57 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEY_FINAL_VERSION
OBJECT MODULE PLACED IN key_final_version.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lib\Src\key_final_version.c COMPACT OPTIMIZE(8,SPEED) INCDIR(.\lib\Inc;.
                    -\user;.\user) DEBUG OBJECTEXTEND PRINT(.\Listings\key_final_version.lst) TABS(2) OBJECT(key_final_version.obj)

line level    source

   1          
   2          #include "main.h"
   3          
   4          sbit key_0 = P1^0;
   5          sbit key_1 = P1^1;
   6          sbit key_2 = P1^2;
   7          sbit key_3 = P1^3;
   8          
   9          
  10          
  11          Key_Typedef key[4];
  12          //static
  13          unsigned char Get_key_value(unsigned char n){
  14   1        
  15   1      unsigned char x;
  16   1        
  17   1        switch (n) {
  18   2        case 0:
  19   2          x=key_0;
  20   2          //return x;
  21   2          break;
  22   2      
  23   2        case 1:
  24   2          x=key_1;
  25   2          //return key_2;
  26   2          break;
  27   2      
  28   2        case 2:
  29   2          x=key_2;
  30   2          //return key_3;
  31   2          break;
  32   2      
  33   2        case 3:
  34   2          x=key_3;
  35   2          //return key_4;
  36   2          break;
  37   2      
  38   2        default:
  39   2          x=0;
  40   2        //  return 0;
  41   2          break;
  42   2        }
  43   1        return x;
  44   1      }
  45          
  46          
  47          //边沿检测  放到定时器1ms跑一次
  48          void Edge_detection(){
  49   1        unsigned char i;  
  50   1        
  51   1        
  52   1        
  53   1      
  54   1        for(i=0;i<4;i++){
C51 COMPILER V9.60.0.0   KEY_FINAL_VERSION                                                 05/17/2020 19:06:57 PAGE 2   

  55   2          
  56   2          key[i].count <<= 1;
  57   2            if(Get_key_value(i)==1)
  58   2              key[i].count++;
  59   2          
  60   2          if(key[i].count==0xf0){
  61   3          key[i].falling_edge_flag=1;
  62   3          key[i].rising_edge_flag=0;
  63   3          }
  64   2          else if (key[i].count==0x0f){
  65   3          key[i].falling_edge_flag=0;
  66   3          key[i].rising_edge_flag=1;
  67   3          }
  68   2          
  69   2          if(key[i].falling_edge_flag!=0){
  70   3          key[i].low_time++;
  71   3          }
  72   2          if(key[i].rising_edge_flag!=0){
  73   3          key[i].high_time++;
  74   3          }
  75   2        }
  76   1      }
  77          
  78          void Get_key_status(){
  79   1        unsigned char i;
  80   1        
  81   1        for(i=0;i<4;i++){
  82   2          if(key[i].high_time>=5){      
  83   3            
  84   3            if(key[i].low_time<=10){          //干扰
  85   4               //if(key[i].status=0;
  86   4            }
  87   3            
  88   3            else if(key[i].low_time<=300){    //短按
  89   4              key[i].status=1;
  90   4            }
  91   3            
  92   3            else if(key[i].low_time>=300){    //长按
  93   4              key[i].status=2;
  94   4            }
  95   3            
  96   3            
  97   3                  key[i].low_time=0;                 //按键处理 计数清0
  98   3            key[i].high_time=0;
  99   3          }
 100   2        }
 101   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    365    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     40    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
